# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from dictum_proto.proto import object_source_pb2 as proto_dot_object__source__pb2
from dictum_proto.proto import plugin_service_pb2 as proto_dot_plugin__service__pb2
from dictum_proto.proto import requests_pb2 as proto_dot_requests__pb2
from dictum_proto.proto import service_pb2 as proto_dot_service__pb2
from dictum_proto.proto import service_run_pb2 as proto_dot_service__run__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/plugin_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PluginServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListObjectSources = channel.unary_unary(
                '/PluginService/ListObjectSources',
                request_serializer=proto_dot_plugin__service__pb2.ListObjectSourcesRequest.SerializeToString,
                response_deserializer=proto_dot_plugin__service__pb2.ListObjectSourcesResponse.FromString,
                _registered_method=True)
        self.GetLatestSource = channel.unary_unary(
                '/PluginService/GetLatestSource',
                request_serializer=proto_dot_plugin__service__pb2.GetLatestSourceRequest.SerializeToString,
                response_deserializer=proto_dot_object__source__pb2.ObjectSource.FromString,
                _registered_method=True)
        self.CreateObjectSource = channel.unary_unary(
                '/PluginService/CreateObjectSource',
                request_serializer=proto_dot_object__source__pb2.ObjectSource.SerializeToString,
                response_deserializer=proto_dot_object__source__pb2.ObjectSource.FromString,
                _registered_method=True)
        self.DeleteObjectSource = channel.unary_unary(
                '/PluginService/DeleteObjectSource',
                request_serializer=proto_dot_requests__pb2.DeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateService = channel.unary_unary(
                '/PluginService/CreateService',
                request_serializer=proto_dot_service__pb2.Service.SerializeToString,
                response_deserializer=proto_dot_service__pb2.Service.FromString,
                _registered_method=True)
        self.ListServices = channel.unary_unary(
                '/PluginService/ListServices',
                request_serializer=proto_dot_plugin__service__pb2.ListServicesRequest.SerializeToString,
                response_deserializer=proto_dot_plugin__service__pb2.ListServicesResponse.FromString,
                _registered_method=True)
        self.GetService = channel.unary_unary(
                '/PluginService/GetService',
                request_serializer=proto_dot_plugin__service__pb2.GetServiceRequest.SerializeToString,
                response_deserializer=proto_dot_service__pb2.Service.FromString,
                _registered_method=True)
        self.UpdateService = channel.unary_unary(
                '/PluginService/UpdateService',
                request_serializer=proto_dot_service__pb2.Service.SerializeToString,
                response_deserializer=proto_dot_service__pb2.Service.FromString,
                _registered_method=True)
        self.CreateServiceRun = channel.unary_unary(
                '/PluginService/CreateServiceRun',
                request_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
                response_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                _registered_method=True)
        self.UpdateServiceRun = channel.unary_unary(
                '/PluginService/UpdateServiceRun',
                request_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
                response_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                _registered_method=True)
        self.GetServiceRun = channel.unary_unary(
                '/PluginService/GetServiceRun',
                request_serializer=proto_dot_plugin__service__pb2.GetServiceRunRequest.SerializeToString,
                response_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                _registered_method=True)
        self.ListServiceRuns = channel.unary_unary(
                '/PluginService/ListServiceRuns',
                request_serializer=proto_dot_requests__pb2.ListRequest.SerializeToString,
                response_deserializer=proto_dot_plugin__service__pb2.ListServiceRunsResponse.FromString,
                _registered_method=True)
        self.RunService = channel.unary_unary(
                '/PluginService/RunService',
                request_serializer=proto_dot_plugin__service__pb2.RunServiceRequest.SerializeToString,
                response_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                _registered_method=True)


class PluginServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListObjectSources(self, request, context):
        """* Sources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateObjectSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteObjectSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateService(self, request, context):
        """* Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateServiceRun(self, request, context):
        """* Service Runs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateServiceRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServiceRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PluginServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListObjectSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListObjectSources,
                    request_deserializer=proto_dot_plugin__service__pb2.ListObjectSourcesRequest.FromString,
                    response_serializer=proto_dot_plugin__service__pb2.ListObjectSourcesResponse.SerializeToString,
            ),
            'GetLatestSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestSource,
                    request_deserializer=proto_dot_plugin__service__pb2.GetLatestSourceRequest.FromString,
                    response_serializer=proto_dot_object__source__pb2.ObjectSource.SerializeToString,
            ),
            'CreateObjectSource': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateObjectSource,
                    request_deserializer=proto_dot_object__source__pb2.ObjectSource.FromString,
                    response_serializer=proto_dot_object__source__pb2.ObjectSource.SerializeToString,
            ),
            'DeleteObjectSource': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteObjectSource,
                    request_deserializer=proto_dot_requests__pb2.DeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateService': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateService,
                    request_deserializer=proto_dot_service__pb2.Service.FromString,
                    response_serializer=proto_dot_service__pb2.Service.SerializeToString,
            ),
            'ListServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServices,
                    request_deserializer=proto_dot_plugin__service__pb2.ListServicesRequest.FromString,
                    response_serializer=proto_dot_plugin__service__pb2.ListServicesResponse.SerializeToString,
            ),
            'GetService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetService,
                    request_deserializer=proto_dot_plugin__service__pb2.GetServiceRequest.FromString,
                    response_serializer=proto_dot_service__pb2.Service.SerializeToString,
            ),
            'UpdateService': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateService,
                    request_deserializer=proto_dot_service__pb2.Service.FromString,
                    response_serializer=proto_dot_service__pb2.Service.SerializeToString,
            ),
            'CreateServiceRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateServiceRun,
                    request_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                    response_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            ),
            'UpdateServiceRun': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateServiceRun,
                    request_deserializer=proto_dot_service__run__pb2.ServiceRun.FromString,
                    response_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            ),
            'GetServiceRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceRun,
                    request_deserializer=proto_dot_plugin__service__pb2.GetServiceRunRequest.FromString,
                    response_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            ),
            'ListServiceRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServiceRuns,
                    request_deserializer=proto_dot_requests__pb2.ListRequest.FromString,
                    response_serializer=proto_dot_plugin__service__pb2.ListServiceRunsResponse.SerializeToString,
            ),
            'RunService': grpc.unary_unary_rpc_method_handler(
                    servicer.RunService,
                    request_deserializer=proto_dot_plugin__service__pb2.RunServiceRequest.FromString,
                    response_serializer=proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PluginService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('PluginService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PluginService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListObjectSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/ListObjectSources',
            proto_dot_plugin__service__pb2.ListObjectSourcesRequest.SerializeToString,
            proto_dot_plugin__service__pb2.ListObjectSourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/GetLatestSource',
            proto_dot_plugin__service__pb2.GetLatestSourceRequest.SerializeToString,
            proto_dot_object__source__pb2.ObjectSource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateObjectSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/CreateObjectSource',
            proto_dot_object__source__pb2.ObjectSource.SerializeToString,
            proto_dot_object__source__pb2.ObjectSource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteObjectSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/DeleteObjectSource',
            proto_dot_requests__pb2.DeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/CreateService',
            proto_dot_service__pb2.Service.SerializeToString,
            proto_dot_service__pb2.Service.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/ListServices',
            proto_dot_plugin__service__pb2.ListServicesRequest.SerializeToString,
            proto_dot_plugin__service__pb2.ListServicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/GetService',
            proto_dot_plugin__service__pb2.GetServiceRequest.SerializeToString,
            proto_dot_service__pb2.Service.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/UpdateService',
            proto_dot_service__pb2.Service.SerializeToString,
            proto_dot_service__pb2.Service.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateServiceRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/CreateServiceRun',
            proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            proto_dot_service__run__pb2.ServiceRun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateServiceRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/UpdateServiceRun',
            proto_dot_service__run__pb2.ServiceRun.SerializeToString,
            proto_dot_service__run__pb2.ServiceRun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServiceRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/GetServiceRun',
            proto_dot_plugin__service__pb2.GetServiceRunRequest.SerializeToString,
            proto_dot_service__run__pb2.ServiceRun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListServiceRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/ListServiceRuns',
            proto_dot_requests__pb2.ListRequest.SerializeToString,
            proto_dot_plugin__service__pb2.ListServiceRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PluginService/RunService',
            proto_dot_plugin__service__pb2.RunServiceRequest.SerializeToString,
            proto_dot_service__run__pb2.ServiceRun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
