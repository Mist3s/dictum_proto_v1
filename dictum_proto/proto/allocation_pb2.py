# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/allocation.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from dictum_proto.proto import accrual_pb2 as proto_dot_accrual__pb2
from dictum_proto.proto import transfer_pb2 as proto_dot_transfer__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16proto/allocation.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13proto/accrual.proto\x1a\x14proto/transfer.proto\"\xcd\x02\n\nAllocation\x12\x12\n\naccrual_id\x18\x01 \x01(\x05\x12\x13\n\x0btransfer_id\x18\x02 \x01(\x05\x12\x17\n\x0f\x63onglomerate_id\x18\x03 \x01(\x05\x12\x1b\n\x13\x61\x63\x63rual_paid_amount\x18\x04 \x01(\x01\x12\x1d\n\x15\x61\x63\x63rual_currency_code\x18\x05 \x01(\t\x12!\n\x19transfer_allocated_amount\x18\x06 \x01(\x01\x12\x1e\n\x16transfer_currency_code\x18\x07 \x01(\t\x12\x15\n\rresource_name\x18\t \x01(\t\x12\x19\n\x07\x61\x63\x63rual\x18\x0b \x01(\x0b\x32\x08.Accrual\x12\x1b\n\x08transfer\x18\r \x01(\x0b\x32\t.Transfer\x12/\n\x0b\x63reate_time\x18\x0e \x01(\x0b\x32\x1a.google.protobuf.TimestampB&Z$github.com/AlexKenbo/dictum_proto/gob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'proto.allocation_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z$github.com/AlexKenbo/dictum_proto/go'
  _globals['_ALLOCATION']._serialized_start=103
  _globals['_ALLOCATION']._serialized_end=436
# @@protoc_insertion_point(module_scope)
